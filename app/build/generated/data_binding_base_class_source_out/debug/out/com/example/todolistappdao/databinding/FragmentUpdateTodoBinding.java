// Generated by view binder compiler. Do not edit!
package com.example.todolistappdao.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.todolistappdao.R;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentUpdateTodoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppBarLayout appbarLayout;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextInputLayout tilDesc;

  @NonNull
  public final TextInputLayout tilName;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentUpdateTodoBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppBarLayout appbarLayout, @NonNull Button btnSave,
      @NonNull LinearLayout linearLayout, @NonNull TextInputLayout tilDesc,
      @NonNull TextInputLayout tilName, @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appbarLayout = appbarLayout;
    this.btnSave = btnSave;
    this.linearLayout = linearLayout;
    this.tilDesc = tilDesc;
    this.tilName = tilName;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentUpdateTodoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentUpdateTodoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_update_todo, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentUpdateTodoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appbarLayout;
      AppBarLayout appbarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appbarLayout == null) {
        break missingId;
      }

      id = R.id.btn_save;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.til_desc;
      TextInputLayout tilDesc = ViewBindings.findChildViewById(rootView, id);
      if (tilDesc == null) {
        break missingId;
      }

      id = R.id.til_name;
      TextInputLayout tilName = ViewBindings.findChildViewById(rootView, id);
      if (tilName == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentUpdateTodoBinding((ConstraintLayout) rootView, appbarLayout, btnSave,
          linearLayout, tilDesc, tilName, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
